before:
  hooks:
    - "go mod tidy"
    - "go generate ./..."

env:
  - "GO111MODULE=on"
  - "CGO_ENABLED=1"
#  - "GOFLAGS=-workfile=off" # Golang 1.18+

builds:
  - &build_template_windows
    id: "template_windows"
    skip: true
    no_unique_dist_dir: true
    mod_timestamp: "{{ .CommitTimestamp }}"
    goos:
      - "windows"
    goarch:
      - "amd64"
      - "arm64"
    env:
      # TDM-GCC 10.3.0 does not come with LTO
      - "CGO_CFLAGS=-fstack-clash-protection -D_GLIBCXX_ASSERTION -D_FORTIFY_SOURCE=2 -flto=auto -ffat-lto-objects"
      - "CGO_CPPFLAGS=-fstack-clash-protection -D_GLIBCXX_ASSERTION -D_FORTIFY_SOURCE=2 -flto=auto -ffat-lto-objects"
      - "CGO_LDFLAGS=-fPIC"
    flags:
      - "-v"
      - "-trimpath"
      - "-buildmode=pie"
    asmflags:
      - "all=-trimpath={{ .Env.GOPATH }}"
    gcflags:
      - "all=-trimpath={{ .Env.GOPATH }}"
    ldflags:
      # build time string overrides
      - "-X 'github.com/jamesits/bgpiano/internal/pkg/version.Version={{ .Version }}'"
      - "-X 'github.com/jamesits/bgpiano/internal/pkg/version.CommitId={{ .Commit }}'"
      - "-X 'github.com/jamesits/bgpiano/internal/pkg/version.Date={{ .CommitDate }}'"
      - "-X 'github.com/jamesits/bgpiano/internal/pkg/version.BuiltBy=goreleaser'"

      # omit the symbol table and debug information
      - "-s"
      # omit the DWARF symbol table
      - "-w"

      # link with C/C++ address sanitizer support (go 1.18+)
      - "-asan"
      # link with C/C++ memory sanitizer support
      - "-msan"

      - "-linkmode=external"
    tags:
      - "cgo"
      - "osusergo"

      # de-facto tag
      # reference: https://github.com/golang/go/issues/26492
      - "static"
      - "static_build"

      # note: enabling netgo disables RELRO, stack canary and fortification
      # - "netgo"

      # required for libiferr to use logrus as the default logger
      - "libiferr.logrus"

  # build targets
  - <<: *build_template_windows
    id: "bgpcat"
    main: "./cmd/bgpcat"
    binary: "{{ .ProjectName }}_{{ .Target }}/bgpcat"
    skip: false
  - <<: *build_template_windows
    id: "midils"
    main: "./cmd/midils"
    binary: "{{ .ProjectName }}_{{ .Target }}/midils"
    skip: false
  - <<: *build_template_windows
    id: "midicat"
    main: "./cmd/midicat"
    binary: "{{ .ProjectName }}_{{ .Target }}/midicat"
    skip: false
  - <<: *build_template_windows
    id: "midipipe"
    main: "./cmd/midipipe"
    binary: "{{ .ProjectName }}_{{ .Target }}/midipipe"
  - <<: *build_template_windows
    id: "bgpiano-send"
    main: "./cmd/bgpiano-send"
    binary: "{{ .ProjectName }}_{{ .Target }}/bgpiano-send"
    skip: false
  - <<: *build_template_windows
    id: "bgpiano-recv"
    main: "./cmd/bgpiano-recv"
    binary: "{{ .ProjectName }}_{{ .Target }}/bgpiano-recv"
    skip: false

snapshot:
  name_template: "{{ incpatch .Version }}-next"

gomod:
  proxy: true
  env:
    - "GOPROXY=https://proxy.golang.org,direct"
    - "GOSUMDB=sum.golang.org"
    - "GOPRIVATE=github.com/jamesits/bgpiano"
